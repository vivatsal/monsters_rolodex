{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["CardComponent","props","className","alt","src","monster","id","name","email","CardList","monsters","map","App","state","SearchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","type","placeholder","onChange","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAIaA,EAAgB,SAAAC,GAAK,OAAK,sBAAKC,UAAU,iBAAf,UAEvC,qBAAKC,IAAI,UAAUC,IAAG,+BAA2BH,EAAMI,QAAQC,GAAzC,4BACtB,oBAAIJ,UAAU,kBAAd,SAAiCD,EAAMI,QAAQE,OAC/C,oBAAIL,UAAU,kBAAd,SAAiCD,EAAMI,QAAQG,YCFlCC,EAAW,SAAAR,GAAK,OAAK,qBAAKC,UAAU,YAAf,SAA4BD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAG,cAAC,EAAD,CAAgCA,QAASA,GAArBA,EAAQC,UCgCxGM,G,wDA9Bd,aAAc,IAAD,8BACZ,gBAEKC,MAAQ,CAACH,SAAS,GAAII,YAAY,IAH3B,E,qDAOb,WAAoB,IAAD,OAEZC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKC,SAAS,CAACV,SAAUS,S,oBAI5C,WAAS,IAAD,OACN,EAAkCE,KAAKR,MAA/BH,EAAR,EAAQA,SAAUI,EAAlB,EAAkBA,YACZQ,EAAmBZ,EAASa,QAAO,SAAAlB,GAAO,OAAGA,EAAQE,KAAKiB,cAAcC,SAASX,EAAYU,kBACnG,OACE,sBAAKtB,UAAU,MAAf,UACE,oBAAIA,UAAU,MAAd,8BACE,uBAAOA,UAAU,SACdwB,KAAK,SACLC,YAAY,kBACZC,SAAU,SAAAC,GAAI,EAAKT,SAAS,CAACN,YAAae,EAAEC,OAAOC,WACvD,cAAC,EAAD,CAAUrB,SAAUY,W,GA3BXU,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.94512224.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const CardComponent = props => (<div className=\"card-component\">\r\n\r\n<img alt=\"monster\" src= {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n<h1 className=\"card-component2\">{props.monster.name}</h1>\r\n<h1 className=\"card-component3\">{props.monster.email}</h1>\r\n \r\n</div>);\r\n","import React from 'react';\r\nimport './card-list.styles.css';\r\n\r\nimport { CardComponent } from '../card/card.component.jsx'\r\n\r\n\r\nexport const CardList = props => (<div className=\"card-list\">{props.monsters.map(monster=>(<CardComponent key={monster.id} monster={monster}/>))}</div>);","import React, { Component } from 'react';\n///import logo from './logo.svg';\nimport { CardList } from './component/card-list/card-list.component.jsx';\nimport './App.css';\n///import { cardList } from './component/card-list/card-list.component.jsx';\n\nclass App extends Component{\n\n constructor(){\n  super();\n\n  this.state = {monsters:[], SearchField:''}\n\n }\n\n componentDidMount(){\n\n        fetch(`https://jsonplaceholder.typicode.com/users`)\n        .then(response=>response.json())\n        .then(users=>this.setState({monsters: users}));\n\n }\n\n  render(){\n    const { monsters, SearchField } = this.state;\n    const filteredMonsters = monsters.filter(monster=> monster.name.toLowerCase().includes(SearchField.toLowerCase()))\n    return( \n      <div className=\"App\">\n        <h1 className=\"mon\">Monsters Rolodex</h1>\n          <input className=\"search\"\n             type=\"search\" \n             placeholder=\"search monsters\" \n             onChange={e=>{this.setState({SearchField: e.target.value})}} />\n         <CardList monsters={filteredMonsters} />\n      </div>)\n      };\n  }\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}